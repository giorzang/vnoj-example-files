sudo -i
apt update
apt upgrade
apt install git gcc g++ make python3-dev python3-pip python3-venv libxml2-dev libxslt1-dev zlib1g-dev gettext curl redis-server pkg-config
add-apt-repository -y ppa:ubuntu-toolchain-r/test
apt install -y g++-13 gcc-13 net-tools
mv /usr/bin/g++-13 /usr/bin/g++ && cp /usr/bin/g++ /usr/bin/g++-13
mv /usr/bin/gcc-13 /usr/bin/gcc && cp /usr/bin/gcc /usr/bin/gcc-13
curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -
apt install nodejs
apt update
apt install mariadb-server libmysqlclient-dev
mysql -uroot -p
ALTER USER 'root'@'localhost' IDENTIFIED BY 'Passwd2@';
FLUSH PRIVILEGES;
CREATE DATABASE dmoj DEFAULT CHARACTER SET utf8mb4 DEFAULT COLLATE utf8mb4_general_ci;
GRANT ALL PRIVILEGES ON dmoj.* TO 'dmoj'@'localhost' IDENTIFIED BY 'root';
exit
// mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -D mysql -u root -p
// mysql -u root -p -e "flush tables;" mysql
exit
mkdir web && cd web && mkdir media problem_data tmp
python3 -m venv vnojsite
. vnojsite/bin/activate
git clone --recursive https://github.com/VNOI-Admin/OJ.git
cd OJ
pip3 install wheel
pip3 install setuptools
pip3 install -r requirements.txt
npm install
nano dmoj/local_settings.py
./manage.py check
./make_style.sh
./manage.py collectstatic
./manage.py compilemessages
./manage.py compilejsi18n
service redis-server start
./manage.py migrate
./manage.py loaddata navbar
./manage.py loaddata language_small
./manage.py loaddata demo
./manage.py createsuperuser
./manage.py check
./manage.py runserver 0.0.0.0:8000
./manage.py runbridged
celery -A dmoj_celery worker
pip3 install uwsgi
nano uwsgi.ini
uwsgi --ini uwsgi.ini
sudo apt install supervisor
sudo nano /etc/supervisor/conf.d/site.conf
sudo nano /etc/supervisor/conf.d/bridged.conf
sudo nano /etc/supervisor/conf.d/celery.conf
sudo supervisorctl update
sudo supervisorctl status
sudo apt install nginx
sudo nano /etc/nginx/conf.d/nginx.conf
sudo nginx -t
sudo chown www-data:www-data /home/abc/web/tmp/dmoj-site.sock
sudo chmod 755 /home/abc/web/tmp/dmoj-site.sock
// sudo chmod 755 /home
// sudo chmod 755 /home/abc
// sudo chmod 755 /home/abc/web
// sudo chmod 755 /home/abc/web/tmp
nano websocket/config.js
pip3 install websocket-client
sudo nano /etc/supervisor/conf.d/wsevent.conf
sudo supervisorctl update
sudo supervisorctl stop all
sudo supervisorctl start all








sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io 
sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
git clone https://github.com/VNOI-Admin/judge-server
cd judge-server/.docker
sudo apt install make
sudo make judge-tiervnoj






FROM vnoj/runtimes-tier1

ARG TAG=master

RUN apt-get update && \
	apt-get install -y --no-install-recommends openjdk-19-jdk-headless openjdk-19-jre-headless golang unzip jq && \
	rm -rf /var/lib/apt/lists/*

# Install scratch-run + pypy + kotlin + rust
RUN ARCH=$([ $(uname -m) = "x86_64" ] && echo "amd64" || echo "arm64") && \
	curl --location -o scratch-run.zip $(curl -s https://api.github.com/repos/VNOI-Admin/scratch-run/releases/latest | grep -o -m 1 "https://github\.com.*.*linux_$ARCH\.zip") && \
		unzip scratch-run.zip && \
		mv scratch-run /usr/bin/scratch-run && \
		rm scratch-run.zip && \
	curl -L -okotlin.zip "$(curl -s https://api.github.com/repos/JetBrains/kotlin/releases | \
		jq -r '[.[] | select(.prerelease | not) | .assets | flatten | .[] | select((.name | startswith("kotlin-compiler")) and (.name | endswith(".zip"))) | .browser_download_url][0]')" && \
		unzip kotlin.zip && mv kotlinc /opt/kotlin && rm kotlin.zip && \
	runuser judge -c 'curl https://sh.rustup.rs -sSf | sh -s -- -y' && \
		mkdir rust && ( \
			cd rust && \
			curl -sL https://raw.githubusercontent.com/DMOJ/judge/master/dmoj/executors/RUST.py | \
				sed '/^CARGO_TOML/,/^"""/!d;//d' > Cargo.toml && \
			mkdir src && \
			curl -sL https://raw.githubusercontent.com/DMOJ/judge/master/dmoj/executors/RUST.py | \
				sed '/^TEST_PROGRAM/,/^"""/!d;//d' > src/main.rs && \
			chown -R judge: . && \
			runuser -u judge /home/judge/.cargo/bin/cargo fetch \
		) && \
		rm -rf rust

ENV PATH="/opt/kotlin/bin:/home/judge/.cargo/bin:${PATH}"

RUN mkdir /judge /problems && cd /judge && \
	curl -L https://github.com/VNOI-Admin/judge-server/archive/"${TAG}".tar.gz | tar -xz --strip-components=1 && \
	python3 -m venv --prompt=DMOJ /env && \
	/env/bin/pip3 install setuptools && \
	/env/bin/pip3 install cython && \
	/env/bin/pip3 install -e . && \
	/env/bin/python3 setup.py develop && \
	HOME=~judge . ~judge/.profile && \
	runuser -u judge -w PATH -- /env/bin/dmoj-autoconf -V > /judge-runtime-paths.yml && \
	echo '  crt_x86_in_lib32: true' >> /judge-runtime-paths.yml && \
	mkdir -p /usr/lib/fpc/ && cp /judge/asset/Windows.pas /usr/lib/fpc/ && fpc -Fe/dev/stderr -O2 /usr/lib/fpc/Windows.pas && \
	/judge/.docker/download_testlib_and_precompile

ENTRYPOINT ["/usr/bin/tini", "--", "/judge/.docker/entry"]




id: tourist
key: 9Kf6FO06legHLB8QmmQAJe6vWKC/dlJS0DrbUnYMU61GKHBQMKkB/s9WuHAIy+GE+jiCLN0c8bnJVce0V9vk7c1IiEeksD7/JXl9
problem_storage_globs:
  - /problems/*


sudo docker run \
    --name tourist \
    --network="host" \
    -v /home/abc/web/problems:/problems \
    --cap-add=SYS_PTRACE \
    -d \
    --restart=always \
    vnoj/judge-tiervnoj:latest \
    run -p 9999 -c /problems/tourist.yml localhost -A 0.0.0.0 -a 12341
